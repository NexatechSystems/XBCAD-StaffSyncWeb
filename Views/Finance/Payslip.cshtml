@model IEnumerable<string>

@{
    ViewData["Title"] = "Payslips";
}

<div class="container">
    <div class="row">
        <!-- Left Side: Form for Payslip Generation -->
        <div class="col-md-6">
            <h2>Create Payslip</h2>

            <form asp-action="GeneratePayslip" asp-controller="Finance" method="post">
                <div class="form-group">
                    <label for="employeeEmail">Employee Email</label>
                    <select id="employeeEmail" name="employeeEmail" class="form-control" required onchange="fetchSalary()">
                        @foreach (var email in Model)
                        {
                            <option value="@email">@email</option>
                        }
                    </select>
                </div>

                <div class="form-group mt-3">
                    <label for="month">Month</label>
                    <input type="text" id="month" name="month" class="form-control" placeholder="e.g., January" required />
                </div>

                <div class="form-group mt-3">
                    <label for="bonus">Bonus</label>
                    <input type="number" id="bonus" name="bonus" class="form-control" value="0" required oninput="updatePreview()" />
                </div>

                <input type="hidden" id="salary" name="salary" value="0" />

                <button type="submit" class="btn btn-primary mt-4">Generate Payslip</button>
            </form>
        </div>

        <!-- Right Side: Payslip Preview -->
        <div class="col-md-6">
            <h2>Payslip Preview</h2>
            <div id="payslipPreview" class="p-3 border rounded">
                <p>Select an employee, month, and enter bonus amount to preview the payslip.</p>
            </div>
        </div>
    </div>
</div>

<!-- Confirmation Message Display -->
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <div class="alert alert-success mt-4">
        <p>@ViewBag.Message</p>
        <p><strong>Employee Email:</strong> @ViewBag.EmployeeEmail</p>
        <p><strong>Month:</strong> @ViewBag.Month</p>
        <p><strong>Base Salary:</strong> $@ViewBag.Salary</p>
        <p><strong>Bonus:</strong> $@ViewBag.Bonus</p>
        <p><strong>Total:</strong> $@ViewBag.Total</p>
    </div>
}

<script>
    async function fetchSalary() {
        const email = document.getElementById("employeeEmail").value;
        const response = await fetch(`/Finance/GetSalary?email=${email}`);

        if (response.ok) {
            const data = await response.json();
            document.getElementById("salary").value = data.salary;
            updatePreview();
        } else {
            console.error("Failed to fetch salary.");
        }
    }

    function updatePreview() {
        const email = document.getElementById("employeeEmail").value;
        const month = document.getElementById("month").value;
        const bonus = parseFloat(document.getElementById("bonus").value) || 0;
        const salary = parseFloat(document.getElementById("salary").value) || 0;
        const total = salary + bonus;

        const preview = `
                    <h3>Payslip for ${month}</h3>
                    <p><strong>Employee Email:</strong> ${email}</p>
                    <p><strong>Base Salary:</strong> $${salary.toFixed(2)}</p>
                    <p><strong>Bonus:</strong> $${bonus.toFixed(2)}</p>
                    <p><strong>Total:</strong> $${total.toFixed(2)}</p>
                `;

        document.getElementById("payslipPreview").innerHTML = preview;
    }
</script>
